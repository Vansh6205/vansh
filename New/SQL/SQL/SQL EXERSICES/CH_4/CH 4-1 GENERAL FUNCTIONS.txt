1 DISPLAY FIRST_NAME , COMMISSION_PCT AND THIRD COLUMN WHERE NULL VALUE WILL BE REPLACE WITH .1
  SELECT FIRST_NAME , COMMISSION_PCT , NVL(COMMISSION_PCT,.1) FROM EMPLOYEES;
2 DISPLAY LAST_NAME , COMMISSION_PCT AND THIRD COLUMN WHICH WILL DISPLAY YES FOR THOSE WHO GETS COMMISSION AND NO FOR REMAINING
  SELECT LAST_NAME , COMMISSION_PCT , NVL2(COMMISSION_PCT,'YES','NO') FROM EMPLOYEES;
3 COMPARE SECOND LAST CHARACTER OF FIRST_NAME AND LAST_NAME, DISPLAY NULL IF BOTH ARE IDENTICAL, OTHERWISE DISPLAY SECOND LAST CHARACTER OF LAST_NAME.
  SELECT LAST_NAME ,  SUBSTR(LAST_NAME,-2,1),SUBSTR(FIRST_NAME,-2,1), NULLIF(SUBSTR(LAST_NAME,-2,1),SUBSTR(FIRST_NAME,-2,1)) FROM EMPLOYEES;
4 DISPLAY NAME AND SINGLE CONTACTNO FOR EACH USING CONTACTNO TABLE. THE PREFERENCE IS OPHONE, RPHONE AND MOBILE.
  SELECT NAME , COALESCE(OPHONE,RPHONE,MOBILE) FROM CONTACTNO;
  
5 DISPLAY LAST_NAME , DEPARTMENT_ID , SALARY AND NEW SALARY AS STATED : FOR DEPT 50 +2000, FOR DEPT 60 +1500 , FOR DEPT 90 +1000 AND FOR REMAINING +500 AS INCREMENT
  SELECT LAST_NAME , DEPARTMENT_ID , SALARY , DECODE(DEPARTMENT_ID,50,SALARY+2000
                                                                ,60,SALARY+1500
                                                                ,90,SALARY+1000
                                                                ,SALARY+500)    FROM EMPLOYEES;
6 DISPLAY FIRST_NAME , JOB_ID , SALARY AND NEW SALARY BASED ON JOB_ID : FOR IT_PROG 30% , FOR ST_CLERK 40% , FOR SA_REP 20% , NO INCREMENT FOR OTHERS
  SELECT FIRST_NAME , JOB_ID , SALARY , DECODE(JOB_ID,'IT_PROG',SALARY*1.3
                                                    ,'ST_CLERK',SALARY*1.4
                                                    ,'SA_REP',SALARY*1.2
                                                    ,SALARY)    FROM EMPLOYEES;
7 DISPLAY FIRST_NAME , SALARY , NEW SALARY BY ADDING INCREMENT LIKE THIS : FOR SALARY UPTO 6000 +2000 , FOR SALARY 6001 - 10000 +1500 , FOR SALARY 10001 - 15000 +1000 FOR REMAINING +500
  SELECT FIRST_NAME , SALARY , CASE WHEN SALARY <= 6000 THEN SALARY+2000
                                    WHEN SALARY >6000 AND SALARY <10001 THEN SALARY+1500
                                    WHEN SALARY>10000 AND SALARY < 15001 THEN SALARY+1000 ELSE SALARY + 500 END FROM EMPLOYEES;
8 DISPLAY FIRST_NAME , YEAR OF JOINING , SALARY AND NEW SALARY. IF YEAR OF JOINING IS BEFORE 90 +2000 , IF YOJ BETWEEN 91 -95 +1500 , IF YOJ BETWEEN 96-98 +1000 FOR REMAINING +500
  SELECT FIRST_NAME , SALARY , TO_CHAR(HIRE_DATE,'RR'),CASE WHEN TO_CHAR(HIRE_DATE,'RR') < 90 THEN SALARY+2000
                                                            WHEN TO_CHAR(HIRE_DATE,'RR') BETWEEN 91 AND 95 THEN SALARY+1500
                                                            WHEN TO_CHAR(HIRE_DATE,'RR') BETWEEN 96 AND 98 THEN SALARY+1000 ELSE SALARY + 500 END FROM EMPLOYEES;
9 DISPLAY LAST_NAME , FIRST CHARACTER OF LAST_NAME , SALARY AND NEW SALARY. IF FIRST CHARACTER IS BETWEEN A-F 40% , G-M 30% , N-S 20% , 10% FOR REMAINING
  SELECT LAST_NAME , SALARY , SUBSTR(LAST_NAME,1,1),CASE WHEN SUBSTR(LAST_NAME,1,1) BETWEEN 'A' AND 'F' THEN SALARY*1.4
                                                            WHEN SUBSTR(LAST_NAME,1,1) BETWEEN 'G' AND 'M' THEN SALARY*1.3
                                                            WHEN SUBSTR(LAST_NAME,1,1) BETWEEN 'N' AND 'S' THEN SALARY*1.2 ELSE SALARY*1.1 END FROM EMPLOYEES;
10 DISPLAY FIRST_NAME , LENGTH OF FIRST_NAME , SALARY , IF LENGTH OF FIRST_NAME IS UPTO 4 +4000 , IF 5-6 + 3000 , 7 AND MORE +2000
   SELECT FIRST_NAME , SALARY , LENGTH(FIRST_NAME),CASE WHEN LENGTH(FIRST_NAME) <=4 THEN SALARY+4000
                                                            WHEN LENGTH(FIRST_NAME) BETWEEN 5 AND 6 THEN SALARY+3000
                                                            WHEN LENGTH(FIRST_NAME) >=7 THEN SALARY+2000 ELSE SALARY END FROM EMPLOYEES;
11 DISPLAY COMMISSION_PCT AND NEW COMMISSION REPLACE NULLS WITH 0 (ZERO)
   SELECT FIRST_NAME , COMMISSION_PCT , NVL(COMMISSION_PCT,0) FROM EMPLOYEES;
12 DISPLAY COMMISSION_PCT AND NEW COMMISSION (REPLACE NULLS WITH .1 AND NON NULLS WITH COMMISSION_PCT + .2)
   SELECT FIRST_NAME , COMMISSION_PCT , NVL2(COMMISSION_PCT,COMMISSION_PCT+.2,.1) FROM EMPLOYEES;
13 COMPARE SECOND LAST CHARACTER OF FIRST_NAME AND LAST_NAME , IF BOTH ARE IDENTICAL DISPLAY NULL ELSE DISPLAY LAST_NAME'S SECOND LAST CHARACTER.
     SELECT LAST_NAME ,  SUBSTR(LAST_NAME,-2,1),SUBSTR(FIRST_NAME,-2,1), NULLIF(SUBSTR(LAST_NAME,-2,1),SUBSTR(FIRST_NAME,-2,1)) FROM EMPLOYEES;
14 COMPARE SECOND LAST CHARACTER OF FIRST_NAME AND LAST_NAME , IF BOTH ARE IDENTICAL DISPLAY 'EQUAL' ELSE 'DIFFERENT'.
   SELECT FIRST_NAME, LAST_NAME ,  SUBSTR(LAST_NAME,-2,1),SUBSTR(FIRST_NAME,-2,1), NVL2(NULLIF(SUBSTR(LAST_NAME,-2,1),SUBSTR(FIRST_NAME,-2,1)),'DIFFERENT','EQUAL') FROM EMPLOYEES;
15 DISPLAY DEPARTMENT_ID , SALARY , NEW SALARY (DEPARTMENT_ID = 50 , +500 , = 60 , + 600 , 80 , + 800 REMAINING + 1000) (USE DECODE)
   SELECT DEPARTMENT_ID, SALARY , DECODE(DEPARTMENT_ID,50 , SALARY+500 
                                                    ,60 , SALARY+ 600 
                                                    ,80 , SALARY+ 800 , SALARY+ 1000) FROM EMPLOYEES;
16 DISPLAY JOB_ID , SALARY , NEW SALARY (JOB_ID = 'IT_PROG' , + 30% , 'ST_CLERK' , +40% , SA_REP , +20% , AD_VP , 10% , REMAINING NO INCREMENT) (USE CASE)
   SELECT JOB_ID, SALARY , CASE JOB_ID WHEN 'IT_PROG' THEN SALARY*1.3 
                                           WHEN 'ST_CLERK' THEN SALARY*1.4 
                                           WHEN 'SA_REP' THEN SALARY*1.2 
                                           WHEN 'AD_VP' THEN SALARY*1.1 ELSE SALARY END FROM EMPLOYEES;
17 DISPLAY SALARY AND NEW SALARY (SALARY RANGE 0-6000 40% , 6001-10000 30% , 10001-15000 20%, REMAINING 15%)
   SELECT FIRST_NAME , SALARY , CASE WHEN SALARY BETWEEN 0 AND 6000 THEN SALARY * 1.4
                                    WHEN SALARY BETWEEN 6001 AND 10000 THEN SALARY * 1.3
                                    WHEN SALARY BETWEEN 10001 AND 15000 THEN SALARY * 1.2 ELSE SALARY * 1.15 END NEW_SALARY FROM EMPLOYEES;
18 DISPLAY HIRE YEAR , SALARY , NEW SALARY (YEAR RANGE UPTO 1990 +1500 , 1991-1994 +1200, 1995-1998 +900, REMAINING +600)
   SELECT FIRST_NAME ,TO_CHAR(HIRE_DATE,'RRRR') HIRE_YEAR, SALARY , CASE WHEN TO_CHAR(HIRE_DATE,'RRRR') <= 1990 THEN SALARY+1500
                                    WHEN TO_CHAR(HIRE_DATE,'RRRR') BETWEEN 1991 AND 1994 THEN SALARY+1200
                      
                                    WHEN TO_CHAR(HIRE_DATE,'RRRR') BETWEEN 1995 AND 1998 THEN SALARY+900 ELSE SALARY+600 END NEW_SALARY FROM EMPLOYEES;
19 DISPLAY MANAGER_ID , SALARY , NEW SALARY (MANAGER_ID 100 40%, 124 30%, 149 20%, REMAINING 5%)
   SELECT FIRST_NAME , MANAGER_ID, SALARY , CASE  MANAGER_ID WHEN 100 THEN SALARY*1.4
                                                            WHEN 124 THEN SALARY*1.3
                                                            WHEN 149 THEN SALARY*1.2 ELSE SALARY*1.05 END NEW_SALARY FROM EMPLOYEES;
20 DISPLAY COMMISSION_PCT AND EXTRA COLUMN IN WHICH IT SHOULD DISPLAY 'YES' IF COMMISSION_PCT IS NOT NULL OR 'NO' IF COMMISSION_PCT IS NULL (DON'T USE NVL2)
   SELECT COMMISSION_PCT , DECODE(COMMISSION_PCT,NULL,'NO','YES') FROM EMPLOYEES;
21 DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF MONTH ELSE 'SECOND'. (USING NULLIF)
   SELECT FIRST_NAME , HIRE_DATE , NVL2(NULLIF(ROUND(HIRE_DATE,'MM'),TRUNC(HIRE_DATE,'MM')),'SECOND','FIRST') FROM EMPLOYEES;
22 DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF QUARTER ELSE 'SECOND'. (USING DECODE)
   SELECT FIRST_NAME , HIRE_DATE , DECODE(ROUND(HIRE_DATE,'Q'),ADD_MONTHS(LAST_DAY(HIRE_DATE)+1,-1),'FIRST','SECOND') FROM EMPLOYEES;
23 DISPLAY FIRST_NAME , HIRE_DATE AND 'FIRST' IF EMPLOYEE IS HIRED IN FIRST HALF OF YEAR ELSE 'SECOND'. (USING CASE)
   SELECT FIRST_NAME , HIRE_DATE, CASE WHEN TO_CHAR(HIRE_DATE,'MM') BETWEEN 01 AND 06 THEN 'FIRST' ELSE 'SECOND' END HIRED_HALF FROM EMPLOYEES;