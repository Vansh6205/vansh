CREATE TABLE L1 AS SELECT * FROM LOCATIONS WHERE 1 = 2;
CREATE TABLE R1 AS SELECT * FROM REGIONS WHERE ROWNUM = 0;
CREATE TABLE D1 AS SELECT * FROM DEPARTMENTS WHERE ROWNUM = 0;



1 INSERT TWO ROWS TO R1 TABLE. (USE LITERAL VALUES)

SQL> INSERT INTO R1 (REGION_ID, REGION_NAME) VALUES (1,'ASIA'),(2,'CANADA');

2 INSERT TWO ROWS TO D1 TABLE. SUPPLY VALUES ONLY FOR NOT NULL COLUMNS. (USE SUBSTITUTION VARIABLES)

SQL> INSERT INTO D1 (DEPARTMENT_NAME) VALUES ('SALES'),('MARKETING');

3 INSERT TWO ROWS TO L1 TABLE. SUPPLY VALUES FOR ALL COLUMNS, BUT KEEP NULL FOR COLUMNS WHICH ALLOWS NULL.

SQL> INSERT INTO L1 (LOCATION_ID, STREET_ADRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) VALUES (1890,NULL,NULL,'ADA',NULL,NULL),(1890,NULL,NULL,'ADA',NULL,NULL);

4 INSERT ALL ROWS OF R1 TABLE INTO SAME TABLE, USING SINGLE COMMAND.

SQL> INSERT INTO R1 SELECT * FROM R1;

5 INSERT TWO ROWS TO C1 TABLE, USE DEFAULT KEY WORD.

SQL> INSERT INTO C1 (COUNTRY_ID, COUNTRY_NAME, REGION_ID) VALUES (101, DEFAULT, DEFAULT),(101, DEFAULT, DEFAULT);

6 CREATE SAVEPOINT NAMED FIRST.

SQL> SAVEPOINT FIRST;

7 INSERT TWO ROWS TO C1 TABLE, USE SUB QUERY TO GET VALUE FOR REGION_ID COLUMN.

SQL> INSERT INTO C1 (COUNTRY_ID, COUNTRY_NAME, REGION_ID) 
	VALUES (101,'DAKL',(SELECT REGION_ID FROM REGIONS WHERE REGION_NAME = 'ASIA')),
			(101,'DAKL',(SELECT REGION_ID FROM REGIONS WHERE REGION_NAME = 'ASIA'));

8 INSERT IN R1 TABLE FROM REGIONS TABLE USING SUB QUERY. IT SHOULD INSERT ALL ROWS WHERE REGION_ID IS HIGHER THAN 2.

SQL> INSERT INTO R1 SELECT * FROM REGIONS WHERE REGION_ID > 2;

9 INSERT INTO D1 TABLE FROM DEPARTMENTS TABLE FOR ONLY DEPARTMENT_NAME AND LOCATION_ID COLUMNS. IT SHOULD INSERT ALL ROWS OF DEPARTMENTS WHERE DEPARTMENT_ID IS LOWER THAN 80.

SQL> INSERT INTO D1 (DEPARTMENT_NAME, LOCATION_ID) SELECT DEPARTMENT_NAME, LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID < 80;

8 UPDATE ALL DEPARTMENT_NAME TO UPPER LATTERS.

SQL> UPDATE D1 SET DEPARTMENT_NAME = UPPER(DEPARTMENT_NAME);

9 UPDATE SALARY WITH 20% INCREMENT FOR EMPLOYEES WHO WORKS IN 50,90,110 DEPARTMENTS.

SQL> UPDATE E1 SET SALARY = SALARY * 1.2 WHERE DEPARTMENT_ID IN (50, 90, 110); 

10 CREATE SAVEPOINT NAMED SECOND.

SQL> SAVEPOINT SECOND;

11 UPDATE SALARY WITH 1500 INCREMENT FOR EMPLOYEES WHO WORKS IN Sales DEPARTMENT.

SQL> UPDATE E1 SET SALARY = SALARY + 1500 WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE 	DEPARTMENT_NAME = 'Sales');

12 UPDATE SALARY WITH 500 AND COMMISSION_PCT WITH .05 FOR EMPLOYEES WHO WORKS AS SA_REP , IT_PROG.

SQL> UPDATE E1 SET SALARY = SALARY + 500 , COMMISSION_PCT = COMMISSION_PCT + 0.05  
	WHERE JOB_ID IN ('SA_REP','IT_PROG');

13 DELETE ALL ROWS OF REGIONS TABLE HAVING REGION_ID HIGHER THAN 4.

SQL> DELETE FROM REGIONS WHERE REGION_ID > 4; 

14 CREATE SAVEPOINT NAMED THIRD.

SQL> SAVEPOINT THIRD;

15 DELETE ALL ROWS OF DEPARTMENTS TABLE HAVING DEPARTMENT_ID HIGHER THAN 190.

SQL> DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID > 190;

16 DELETE ALL ROWS OF EMPLOYEES TABLE WHO WORKS IN Marketing DEPARTMENT.

SQL> DELETE FROM EMPLOYEES WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Marketing');

17 UNDO ALL CHANGES DONE AFTER SAVEPOINT NAMED THIRD.

SQL> ROLLBACK TO THIRD;

18 UNDO ALL CHANGES DONE AFTER SAVEPOINT NAMED FIRST.

SQL> ROLLBACK TO FIRST;

19 SAVE ALL REMAINING CHANGES.
 
SQL> COMMIT;














