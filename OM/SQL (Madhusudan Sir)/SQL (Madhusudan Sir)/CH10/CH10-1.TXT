SQL> 
SQL> REM TABLE/FILE
SQL> 
SQL> REM FILE : PHYSICAL :
SQL> 
SQL> REM TABLE : LOGICAL
SQL> 
SQL> REM FILE : PHYSICAL : WE CAN GET IT'S INFO. USING MYCOMPUTER/THISPC/OS COMMAND
SQL> 
SQL> REM TABLE : LOGICAL : WE CAN'T GET ANY INFO. FROM OS. WE CAN GET ITS INFO. USING ORACLE COMMANDS LIKE SELECT.
SQL> 
SQL> 
SQL> REM TABLE : IS USED TO STORE BUSINESS DATA PERMANENTLY INSIDE DATABASE
SQL> 
SQL> REM WE CAN CREATE TABLE IN TWO STYLES : 1 CREATING TABLE FROM SCRATCH 2 CREATING TABLE USING SUBQUERY/TABLE
SQL> 
SQL> REM SYNTAX FOR CREATING TABLE FROM SCRATCH : CREATE TABLE table_name (column_name datatype(size) DEFAULT default_value column_level_constraints,...,table_level_constraints);
SQL> 
SQL> 
SQL> 
SQL> REM TABLE NAME MAY BE : 1 CASE INSENSITIVE (DEFAULT/RECOMMENDED) 2 CASE SENSITIVE
SQL> 
SQL> 
SQL> 
SQL> REM RULES OF CASE INSENSITIVE NAMING :
SQL> 
SQL> REM 1 MINIMUM 1 CHARACTER , MAXIMUM 128 CHARACTERS
SQL> 
SQL> REM 2 FIRST CHARACTER MUST BE ALPHABET, REMAINING CHARACTERS MAY BE ALPHABETS, DIGITS OR ANY OF THE 3 SPECIAL CHARACTERS _ # $
SQL> 
SQL> REM 3 WE CAN'T USE EXISTING TABLE NAME FOR NEWLY CREATED TABLE.
SQL> 
SQL> REM 4 WE CAN'T USE ORACLE/SQL KEY/RESERVE WORD AS TABLE NAME, BUT IT MAY BE PART OF TABLE NAME.
SQL> 
SQL> 
SQL> 
SQL> create table pqr(no number);
create table pqr(no number)
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> select * from Pqr;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        10                                                                                                                                                                                              

SQL> select * from pqr;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        10                                                                                                                                                                                              

SQL> select * from PQR;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        10                                                                                                                                                                                              

SQL> select * from PqR;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        10                                                                                                                                                                                              

SQL> DROP TABLE PQR;

Table dropped.

SQL> create table pqr(no number);

Table created.

SQL> insert into Pqr values (11);

1 row created.

SQL> SELECT * FROM pQr;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        11                                                                                                                                                                                              

SQL> REM RULES FOR CASE SENSITIVE NAMING :
SQL> 
SQL> REM 1 MINIMUM 1 CHARACTER , MAXIMUM 128 CHARACTERS
SQL> 
SQL> REM 2 IT MUST BE DELIMITED WITH DOUBLE QUOTES "
SQL> 
SQL> REM 3 WE CAN USE ANY CHARCTER WHILE NAMING. EXCEPTION " &
SQL> 
SQL> REM 4 WE CAN CREATE TABLE WITH SQL/ORACLE RESERVE/KEY WORD.
SQL> 
SQL> REM 5 WE CAN CREATE TABLE WITH IDENTICAL NAME UNDER SAME USER/SCHEMA, BUT EITHER SPACING OR CASE MUST BE DIFFERENT.
SQL> 
SQL> REM 6 WHEN WE REFER TABLE WE MUST : 1 DELIMIT IT WITH DOUBLE QUOTES 2 USE SAME SPELLING 3 SAME CASE 4 SAME SPACING
SQL> 
SQL> 
SQL> REM 7 WE MUST NOT USE ALL CAPITAL ALPHABETS, OTHERWISE IT WILL BE CONSIDERED AS CASE INSENSITIVE NAMING.
SQL> 
SQL> 
SQL> 
SQL> CREATE TABLE "Abc"(c char);

Table created.

SQL> INSERT INTO Abc values ('a');
INSERT INTO Abc values ('a')
                        *
ERROR at line 1:
ORA-01722: invalid number 


SQL> select * from abc;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        10                                                                                                                                                                                              
        20                                                                                                                                                                                              
        30                                                                                                                                                                                              

SQL> INSERT INTO "Abc" values ('a');

1 row created.

SQL> INSERT INTO "ABc" values ('a');
INSERT INTO "ABc" values ('a')
            *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> INSERT INTO "Ab c" values ('a');
INSERT INTO "Ab c" values ('a')
            *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> INSERT INTO "Ab" values ('a');
INSERT INTO "Ab" values ('a')
            *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> select * from abc;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        10                                                                                                                                                                                              
        20                                                                                                                                                                                              
        30                                                                                                                                                                                              

SQL> select * from Abc;

        NO                                                                                                                                                                                              
----------                                                                                                                                                                                              
        10                                                                                                                                                                                              
        20                                                                                                                                                                                              
        30                                                                                                                                                                                              

SQL> select * from "abc";
select * from "abc"
              *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> select * from "Abc";

C                                                                                                                                                                                                       
-                                                                                                                                                                                                       
a                                                                                                                                                                                                       

SQL> REM RULES OF CASE INSENSITIVE NAMING :
SQL> 
SQL> REM 1 MINIMUM 1 CHARACTER , MAXIMUM 128 CHARACTERS
SQL> 
SQL> REM 2 FIRST CHARACTER MUST BE ALPHABET, REMAINING CHARACTERS MAY BE ALPHABETS, DIGITS OR ANY OF THE 3 SPECIAL CHARACTERS _ # $
SQL> 
SQL> REM 3 WE CAN'T USE EXISTING TABLE NAME FOR NEWLY CREATED TABLE.
SQL> 
SQL> REM 4 WE CAN'T USE ORACLE/SQL KEY/RESERVE WORD AS TABLE NAME, BUT IT MAY BE PART OF TABLE NAME.
SQL> 
SQL> 
SQL> REM 1 EMPLOYEE 2 ABC123 3 ABC_#$ 4 123_#$ 5 A1_ 6 regions 7 AB CD 8 FIRST 9 FIRST#next 10 ab#$34
SQL> 
SQL> REM 1 TRUE     2 TRUE   3 TRUR   4 FALSE  5 TRUE6 FALSE   7 FALSE 8 FALSE 9 TRUE       10 TRUE
SQL> 
SQL> 
SQL> REM RULES FOR CASE SENSITIVE NAMING :
SQL> 
SQL> REM 1 MINIMUM 1 CHARACTER , MAXIMUM 128 CHARACTERS
SQL> 
SQL> REM 2 IT MUST BE DELIMITED WITH DOUBLE QUOTES "
SQL> 
SQL> REM 3 WE CAN USE ANY CHARCTER WHILE NAMING. EXCEPTION " &
SQL> 
SQL> REM 4 WE CAN CREATE TABLE WITH SQL/ORACLE RESERVE/KEY WORD.
SQL> 
SQL> REM 5 WE CAN CREATE TABLE WITH IDENTICAL NAME UNDER SAME USER/SCHEMA, BUT EITHER SPACING OR CASE MUST BE DIFFERENT.
SQL> 
SQL> REM 6 WHEN WE REFER TABLE WE MUST : 1 DELIMIT IT WITH DOUBLE QUOTES 2 USE SAME SPELLING 3 SAME CASE 4 SAME SPACING
SQL> 
SQL> 
SQL> REM 7 WE MUST NOT USE ALL CAPITAL ALPHABETS, OTHERWISE IT WILL BE CONSIDERED AS CASE INSENSITIVE NAMING.
SQL> 
SQL> REM 1 "REGIONS" 2 "locations" 3 "first" 4 "ORDER" 5 "123' 6 '!@#' 7 "$%^&" 8 "(IN)" 9 "LIke" 10 "SELECt"
SQL> 
SQL> REM 1 FALSE     2 TRUE        3 TRUE    4 FALSE   5 FALSE 6 FALSE 7 TRUE   8 TRUE   9 TRUE   10 TRUE
SQL> 
SQL> 
SQL> CREATE TABLE "$%^&"(NO NUMBER);
CREATE TABLE "$%^&"(NO NUMBER)
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> DROP TABLE "$%^&";

Table dropped.

SQL> CREATE TABLE "$%^&"(NO NUMBER);

Table created.

SQL> CREATE TABLE "$%^&A"(NO NUMBER);
Enter value for a: T
old   1: CREATE TABLE "$%^&A"(NO NUMBER)
new   1: CREATE TABLE "$%^T"(NO NUMBER)

Table created.

SQL> CREATE TABLE "TARAK""MEHTa""(NO NUMBER);
CREATE TABLE "TARAK""MEHTa""(NO NUMBER)
             *
ERROR at line 1:
ORA-03001: unimplemented feature 


SQL> CREATE TABLE "TARAK"MEHTa""(NO NUMBER);
CREATE TABLE "TARAK"MEHTa""(NO NUMBER)
                    *
ERROR at line 1:
ORA-00922: missing or invalid option 


SQL> CREATE TABLE "(IN)" (NO NUMBER);

Table created.

SQL> CREATE TABLE T1(NM CHAR(10);
CREATE TABLE T1(NM CHAR(10)
                          *
ERROR at line 1:
ORA-00907: missing right parenthesis 


SQL> CREATE TABLE T1(NM CHAR(10));
CREATE TABLE T1(NM CHAR(10))
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> DROP TABLE T1;

Table dropped.

SQL> CREATE TABLE T1(NM CHAR(10));

Table created.

SQL> INSERT INTO T1 VALUES ('MADHUSUDAN');

1 row created.

SQL> INSERT INTO T1 VALUES ('RAM');

1 row created.

SQL> INSERT INTO T1 VALUES ('NAUKA');

1 row created.

SQL> COMMIT;

Commit complete.

SQL> SELECT NM , LENGTH(NM) FROM T1;

NM         LENGTH(NM)                                                                                                                                                                                   
---------- ----------                                                                                                                                                                                   
MADHUSUDAN         10                                                                                                                                                                                   
RAM                10                                                                                                                                                                                   
NAUKA              10                                                                                                                                                                                   

SQL> CREATE TABLE T2(NM VARCHAR(10));
CREATE TABLE T2(NM VARCHAR(10))
             *
ERROR at line 1:
ORA-00955: name is already used by an existing object 


SQL> DROP TABLE T2;

Table dropped.

SQL> CREATE TABLE T2(NM VARCHAR(10));

Table created.

SQL> INSERT INTO T1 VALUES ('MADHUSUDAN');

1 row created.

SQL> INSERT INTO T1 VALUES ('RAM');

1 row created.

SQL> INSERT INTO T1 VALUES ('NAUKA');

1 row created.

SQL> COMMIT;

Commit complete.

SQL> SELECT NM , LENGTH(NM) FROM T2;

no rows selected

SQL> INSERT INTO T2 VALUES ('MADHUSUDAN');

1 row created.

SQL> INSERT INTO T2 VALUES ('RAM');

1 row created.

SQL> INSERT INTO T3 VALUES ('NAUKA');
INSERT INTO T3 VALUES ('NAUKA')
            *
ERROR at line 1:
ORA-00947: not enough values 


SQL> INSERT INTO T2 VALUES ('NAUKA');

1 row created.

SQL> COMMIT;

Commit complete.

SQL> SELECT * FROM T2;

NM                                                                                                                                                                                                      
----------                                                                                                                                                                                              
MADHUSUDAN                                                                                                                                                                                              
RAM                                                                                                                                                                                                     
NAUKA                                                                                                                                                                                                   

SQL> SELECT NM , LENGTH(NM) FROM T2;

NM         LENGTH(NM)                                                                                                                                                                                   
---------- ----------                                                                                                                                                                                   
MADHUSUDAN         10                                                                                                                                                                                   
RAM                 3                                                                                                                                                                                   
NAUKA               5                                                                                                                                                                                   

SQL> DESC EMPLOYEES
 Name                                                                                                              Null?    Type
 ----------------------------------------------------------------------------------------------------------------- -------- ----------------------------------------------------------------------------
 EMPLOYEE_ID                                                                                                       NOT NULL NUMBER(6)
 FIRST_NAME                                                                                                                 VARCHAR2(10)
 LAST_NAME                                                                                                         NOT NULL VARCHAR2(10)
 EMAIL                                                                                                                      VARCHAR2(10)
 PHONE_NUMBER                                                                                                               VARCHAR2(20)
 HIRE_DATE                                                                                                         NOT NULL DATE
 JOB_ID                                                                                                            NOT NULL VARCHAR2(10)
 SALARY                                                                                                                     NUMBER(8,2)
 COMMISSION_PCT                                                                                                             NUMBER(2,2)
 MANAGER_ID                                                                                                                 NUMBER(6)
 DEPARTMENT_ID                                                                                                              NUMBER(4)

SQL> SELECT * FROM EMPLOYEES/
  2  
SQL> SELECT * FROM EMPLOYEES;

EMPLOYEE_ID FIRST_NAME LAST_NAME  EMAIL      PHONE_NUMBER         HIRE_DATE JOB_ID         SALARY COMMISSION_PCT MANAGER_ID DEPARTMENT_ID                                                               
----------- ---------- ---------- ---------- -------------------- --------- ---------- ---------- -------------- ---------- -------------                                                               
        100 Steven     King       SKING      515.123.4567         17-JUL-87 AD_PRES         24000                                      90                                                               
        101 Neena      Kochhar    NKOCHHAR   515.123.4568         21-SEP-89 AD_VP           17000                       100            90                                                               
        102 Lex        De Haan    LDEHAAN    515.123.4569         13-JAN-93 AD_VP           17000                       100            90                                                               
        103 Alexander  Hunold     AHUNOLD    590.423.4567         03-JAN-90 IT_PROG          9000                       102            60                                                               
        104 Bruce      Ernst      BERNST     590.423.4568         21-MAY-91 IT_PROG          6000                       103            60                                                               
        107 Diana      Lorentz    DLORENTZ   590.423.5567         07-FEB-99 IT_PROG          4200                       103            60                                                               
        124 Kevin      Mourgos    KMOURGOS   650.123.5234         16-NOV-99 ST_MAN           5800                       100            50                                                               
        141 Trenna     Rajs                  650.121.8009         17-OCT-95 ST_CLERK         3500                       124            50                                                               
        142 Curtis     Davies     CDAVIES    650.121.2994         29-JAN-97 ST_CLERK         3100                       124            50                                                               
        143 Randall    Matos      RMATOS     650.121.2874         15-MAR-98 ST_CLERK         2600                       124            50                                                               
        144 Peter      Vargas     PVARGAS    650.121.2004         09-JUL-98 ST_CLERK         2500                       124            50                                                               
        149 Eleni      Zlotkey    EZLOTKEY   011.44.1344.429018   29-JAN-00 SA_MAN          10500             .2        100            80                                                               
        174 Ellen      Abel       EABEL      011.44.1644.429267   11-MAY-96 SA_REP          11000             .3        149            80                                                               
        176 Jonathon   Taylor     JTAYLOR    011.44.1644.429265   24-MAR-98 SA_REP           8600             .3        149            80                                                               
        178 Kimerely   Grant      KGRANT     011.44.1644.429263   24-MAY-99 SA_REP           7000            .15        149                                                                             
        200 Jennifer   Whalen     JWHALEN    515.123.4444         17-SEP-87 AD_ASST          4400                       101            10                                                               
        201 Michael    Hartstein  MHARTSTE   515.123.5555         17-FEB-96 MK_MAN          13000                       100            20                                                               
        202 Pat        Fay        PFAY       603.123.6666         17-AUG-97 MK_REP           6000                       201            20                                                               
        205 Shelley    Higgins    SHIGGINS   515.123.8080         07-JUN-94 AC_MGR          12000                       101           110                                                               
        206 William    Gietz      WGIETZ     515.123.8181         07-JUN-94 AC_ACCOUNT       8300                       205           110                                                               

20 rows selected.

SQL> SPOOL OFF
