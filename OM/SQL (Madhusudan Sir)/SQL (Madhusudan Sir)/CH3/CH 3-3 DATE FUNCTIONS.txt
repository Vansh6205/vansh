1 DISPLAY SERVER'S DATE
-> SELECT SYSDATE FROM DUAL;

2 DISPLAY CURRENT MACHINE'S DATE AND TIME BOTH
->SELECT CURRENT_DATE FROM DUAL;
  
3 COMPANY PAYS SALARY ON LAST DAY OF CURRENT MONTH, DISPLAY FIRST SALARY DATE
-> SELECT FIRST_NAME, HIRE_DATE, SALARY, LAST_DAY(HIRE_DATE) FSD FROM EMPLOYEES;
  
4 COMPANY PAYS SALARY ON NEXT MONTH'S FIRST DATE, DISPLAY FIRST SALARY DATE
-> SELECT FIRST_NAME, HIRE_DATE, SALARY, LAST_DAY(HIRE_DATE) + 1 FSD FROM EMPLOYEES;
  
5 DISPLAY HOW MANY DAYS EACH EMPLOYEE HAS WORKED IN THE MONTH OF HIS JONING
-> SELECT FIRST_NAME, MONTHS_BETWEEN(SYSDATE, HIRE_DATE) "Worked in Months" FROM EMPLOYEES;
  
6 DISPLAY FOR HOW MANY COMPLETED YEARS EACH EMPLOYEE IS WORKING WITH COMPANY
-> SELECT FIRST_NAME, TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE) / 12) "COMPLETED YEARS" FORM EMPLOYEES;
  
7 COMPANY PAYS FIRST INCREMENT AFTER 6 MONTHS OF JOINING, DISPLAY EACH EMPLOYEE'S FIRST INCREMENT DATE
-> SELECT FIRST_NAME, ADD_MONTHS(HIRE_DATE, 6) "FIRST INCREMENT DATE" FROM EMPLOYEES;
  
8 COMPANY PAYS WEEKLY ON MONDAY, DISPLAY FIRST SALARY DATE WITH DAY
-> SELECT FIRST_NAME, HIRE_DATE, SALARY, NEXT_DAY(HIRE_DATE, 'MON') FSD FROM EMPLOYEES;
  
9 FIND DIFFERENCE IN AGE OF YOUR FATHER AND MOTHER IN NO. OF DAYS
-> SELECT '10-NOV-1978' - '10-JUN-1980' FROM DUAL;

10 COMPANY PAYS ON NEXT MONTH'S 7th DATE. FIND 3rd SALARY DATE.
-> SELECT FIRST_NAME, HIRE_DATE, SALARY, ADD_MONTHS(LAST_DAY(HIRE_DATE) + 7, 2) "3RD SALARY" FROM EMPLOYEES;

11 COMPANY PAYS ON EACH FRIDAY. FIND SECOND LAST SALARY DATE.
-> SELECT NEXT_DAY(SYSDATE, 'FRI') - (7*2) FROM DUAL;

12 COMPANY PAYS LAST DATE OF CURRENT MONTH. FIND LAST SALARY DATE.
-> SELECT ADD_MONTHS(LAST_DAY(SYSDATE), -1) FROM DUAL;

13 COMPANY PAYS ON 10th OF NEXT MONTH. FIND NEXT SALARY DATE.
-> SELECT LAST_DAY(SYSDATE) + 10 FROM DUAL;

14 COMPANY PAYS ON EACH TUESDAY, FIND 3rd LAST SALARY DATE.
-> SELECT NEXT_DAY(SYSDATE, 'TUE') - (7*3) FROM DUAL;

15  COMPANY PAYS INCENTIVES ON LAST DATE OF EACH CALENDER QUARTER. FIND FIRST INCENTIVE DATE.
-> SELECT FIRST_NAME, HIRE_DATE, ADD_MONTHS(TRUNC(HIRE_DATE, 'MM'), 5) FROM EMPLOYEES;

16 COMPANY MAKES EMPLOYEE PERMANENT AFTER 6 QUARTERS, FIND EACH EMPLOYEE'S PERMANENT DATE.
-> SELECT FIRST_NAME, HIRE_DATE, ADD_MONTHS(HIRE_DATE, 19) "EMPLOYEE'S PERMANENT DATE" FROM EMPLOYEES;

17 COMPANY PAYS SALARY ON FIRST WEDNESDA Y OF EACH MONTH. FIND FIRST AND LAST SALARY DATE. DISPLAY DAY NAME WITH DATES.
-> SELECT FIRST_NAME, HIRE_DATE, NEXT_DAY(LAST_DAY(HIRE_DATE) + 1, 'WED'), NEXT_DAY(TRUNC(SYSDATE, 'MM'), 'WED') FROM EMPLOYEES;

18 COMPANY PAYS ON LAST SUNDAY OF EACH MONTH. FIND FIRST AND NEXT SALARY DATE. DISPLAY DAY NAME WITH DATES.
-> SELECT FIRST_NAME, HIRE_DATE, SALARY, NEXT_DAY(LAST_DAY(HIRE_DATE)+1, 'SUN') - 7, NEXT_DAY(LAST_DAY(ADD_MONTHS(HIRE_DATE, 1)) + 1, 'SUN') - 7 FROM EMPLOYEES;

19 COMPANY PAYS BONUS TWO TIMES PER YEAR ON LAST DATE OF 2nd AND 4th QUARTER OF CALENDER YEAR. FIND FIRST BONUS DATE.

20 COMPANY DECLARES INCREMENTS TWO TIMES PER YEAR ON FIRST DATE OF 1st AND 3rd QUARTER AS PER ACCOUNTING YEAR. FIND SECOND INCREMENT DATE FOR EACH EMPLOYEE.
-> SELECT FIRST_NAME, HIRE_DATE, ADD_MONTHS(TRUNC(HIRE_DATE, 'RRRR'), 18) FROM EMPLOYEES; 