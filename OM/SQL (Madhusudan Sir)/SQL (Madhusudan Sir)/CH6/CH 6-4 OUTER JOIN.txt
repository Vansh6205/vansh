1 DISPLAY ONLY THOSE DEPARTMENT_NAME IN WHICH NO EMPLOYEE IS HIRED
 -> SELECT DEPARTMENT_NAME
	FROM DEPARTMENTS
	LEFT JOIN EMPLOYEES USING (DEPARTMENT_ID)
	WHERE EMPLOYEE_ID IS NULL;
	
2 DISPLAY ONLY THOSE EMPLOYEE FIRST_NAME WHOSE DEPARTMENT_ID IS NOT YET DECIDED
 -> SELECT FIRST_NAME
	FROM EMPLOYEES 
	LEFT JOIN DEPARTMENTS USING (DEPARTMENT_ID)
	WHERE DEPARTMENT_ID IS NULL;

3 DISPLAY THOSE REGION_NAME IN WHICH NO COUNTRY EXISTS
 -> SELECT REGION_NAME
	FROM REGIONS 
	LEFT JOIN COUNTRIES USING (REGION_ID)
	WHERE COUNTRY_ID IS NULL;

4 DISPLAY THOSE FIRST_NAME WHO HAVE NOT GOT ANY PROMOTION

5 DISPLAY ONLY THOSE COUNTRY_NAME IN WHICH NO LOCATION IS FIXED
 -> SELECT COUNTRY_NAME
	FROM COUNTRIES
	LEFT JOIN LOCATIONS USING (COUNTRY_ID)
	WHERE LOCATION_ID IS NULL;

6 DISPLAY THOSE EMPLOYEE FIRST_NAME WHO HAVE GOT PROMOTION

7 DISPLAY THE GRADE INFO. FROM JOB_GRADES TABLE, IN WHICH NO EMPLOYEE IS GETTING SALARY

8 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , BOTH MANAGER_ID (USE USING CLAUSE) DISPLAY EXTRA FIRST_NAME.
 -> SELECT FIRST_NAME, D.DEPARTMENT_NAME, DEPARTMENT_ID, E.MANAGER_ID, D.MANAGER_ID
	FROM EMPLOYEES E
	LEFT JOIN DEPARTMENTS D USING (DEPARTMENT_ID);

9 DISPLAY FIRST_NAME , DEPARTMENT_NAME , DEPARTMENT_ID , BOTH MANAGER_ID (DON'T USE USING CLAUSE) DISPLAY EXTRA DEPARTMENT_NAME.
 -> SELECT FIRST_NAME, D.DEPARTMENT_NAME, E.DEPARTMENT_ID, E.MANAGER_ID, D.MANAGER_ID
	FROM EMPLOYEES E
	RIGHT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

10 DISPLAY DEPARTMENT_NAME IN WHICH NO EMPLOYEE IS HIRED
 -> SELECT DEPARTMENT_NAME
	FROM DEPARTMENTS D
	LEFT JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
	WHERE EMPLOYEE_ID IS NULL;

11 DISPLAY THOSE REGION_NAME IN WHICH NO CITY EXISTS
 -> SELECT REGION_NAME
	FROM REGIONS
	LEFT JOIN COUNTRIES USING (REGION_ID)
	LEFT JOIN LOCATIONS USING (COUNTRY_ID)
	WHERE LOCATION_ID IS NULL AND COUNTRY_ID IS NULL;

12 JOIN EMPLOYEES AND DEPARTMENTS TABLE, DISPLAY EXTRA ROWS OF EMPLOYEES TABLE
 -> SELECT *
	FROM EMPLOYEES E
	LEFT JOIN DEPARTMENTS D USING (DEPARTMENT_ID);

13 JOIN EMPLOYEES AND DEPARTMENTS TABLE, DISPLAY EXTRA ROWS OF BOTH TABLES
 -> SELECT *
	FROM EMPLOYEES E
	FULL JOIN DEPARTMENTS D USING (DEPARTMENT_ID);

14 DISPLAY ONLY THOSE DEPRATMENT_NAME, IN WHICH NO ONE IS HIRED
 -> SELECT DEPARTMENT_NAME
	FROM DEPARTMENTS D
	LEFT JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
	WHERE EMPLOYEE_ID IS NULL;

15 DISPLAY EMPLOYEE'S FIRST_NAME , MANAGER'S FIRST_NAME
 -> SELECT E.FIRST_NAME EMP_NAME, M.FIRST_NAME MGR_NAME
	FROM EMPLOYEES E
	JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID;

16 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOYEES' SALARY,  MANAGER'S FIRST_NAME, MANAGER'S SALARY
 -> SELECT E.FIRST_NAME EMP_NAME, E.SALARY EMP_SALARY, M.FIRST_NAME MGR_NAME, M.SALARY MGR_SALARY
	FROM EMPLOYEES E
	JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID;

17 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOEYES' SALARY, EMPLOYEE'S JOB_TITLE, MANAGER'S FIRST_NAME, MANAGER'S SALARY, MANAGER'S JOB_TITLE
 -> SELECT E.FIRST_NAME EMP_NAME, E.SALARY EMP_SALARY, EJ.JOB_TITLE EMP_JOB_TITLE, 
           M.FIRST_NAME MGR_NAME, M.SALARY MGR_SALARY, MJ.JOB_TITLE MGR_JOB_TITLE
	FROM EMPLOYEES E
	JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID
	JOIN JOBS EJ ON E.JOB_ID = EJ.JOB_ID
	JOIN JOBS MJ ON M.JOB_ID = MJ.JOB_ID;

18 DISPLAY EMPLOYEE'S FIRST_NAME , EMPLOEYES' SALARY, EMPLOYEE'S JOB_TITLE,, SALARY , GRADE_LEVEL  MANAGER'S FIRST_NAME, MANAGER'S SALARY, MANAGER'S JOB_TITLE , SALARY , GRADE_LEVEL
 -> SELECT E.FIRST_NAME EMP_NAME, E.SALARY EMP_SALARY, EJ.JOB_TITLE EMP_JOB_TITLE, EG.GRADE_LEVEL EMP_GRADE,
		   M.FIRST_NAME MGR_NAME, M.SALARY MGR_SALARY, MJ.JOB_TITLE MGR_JOB_TITLE, MG.GRADE_LEVEL MGR_GRADE
	FROM EMPLOYEES E
	JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID	
	JOIN JOBS EJ ON E.JOB_ID = EJ.JOB_ID
	JOIN JOB_GRADES EG ON E.SALARY BETWEEN EG.LOWEST_SAL AND EG.HIGHEST_SAL
	JOIN JOBS MJ ON M.JOB_ID = MJ.JOB_ID
	JOIN JOB_GRADES MG ON M.SALARY BETWEEN MG.LOWEST_SAL AND MG.HIGHEST_SAL;

19 DISPLAY ONLY THOSE REGION_NAME IN WHICH NO COUNTRY EXISTS.
 -> SELECT REGION_NAME
	FROM REGIONS R
	LEFT JOIN COUNTRIES C ON C.REGION_ID = R.REGION_ID
	WHERE COUNTRY_ID IS NULL;