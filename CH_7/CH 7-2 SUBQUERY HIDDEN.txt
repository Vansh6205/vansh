
1 DISPLAY THOSE EMPLOYEES WHO GETS HIGHER SALARY THAN ALL EMPLOYEES OF DEPARTMENT 50 
  SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE SALARY > ALL(SELECT SALARY FROM EMPLOYEES WHERE DEPARTMENT_ID=50);
2 DISPLAY ALL EMPLOYEES WHO WERE HIRED BEFORE Diana
  SELECT FIRST_NAME,HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE <(SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME='Diana');
3 DISPLAY THOSE EMPLOYEES WHO WORKS IN Executive DEPARTMENT
  SELECT FIRST_NAME,DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID=(SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME='Executive');
4 DISPLAY THOSE WHO WORKS IN Toronto CITY 
  SELECT FIRST_NAME,DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID=
  (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID=
  (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY='Toronto'));

5 DISPLAY THOSE WHO GETS LOWEST SALARY IN THEIR DEPARTMENT
  SELECT FIRST_NAME,DEPARTMENT_ID,SALARY FROM EMPLOYEES WHERE SALARY IN 
  (SELECT MIN(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

6 DISPLAY THOSE WHO GET HIGHEST SALARY FOR THEIR JOB_ID
  SELECT FIRST_NAME,JOB_ID,SALARY FROM EMPLOYEES 
  WHERE (JOB_ID,SALARY) IN (SELECT JOB_ID,MAX(SALARY) FROM EMPLOYEES GROUP BY JOB_ID);

7 DISPLAY THOSE WHO GETS LOWEST SALARY FOR THEIR MANAGER
  SELECT FIRST_NAME,MANAGER_ID,SALARY FROM EMPLOYEES
   WHERE (MANAGER_ID,SALARY) IN (SELECT MANAGER_ID,MIN(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID);

8 DISPLAY THOSE WHO GETS HIGHEST SALARY FOR THEIR HIRE YEAR
  SELECT FIRST_NAME,SALARY,TO_CHAR(HIRE_DATE,'RR') FROM EMPLOYEES
   WHERE SALARY IN(SELECT MAX(SALARY) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'RR'));

9 DISPLAY FIRST_NAME AND SALARY FOR THE EMPLOYEES WHO GETS HIGHEST SALARY QUARTER WISE (IGNORE YEAR)
  SELECT FIRST_NAME,SALARY FROM EMPLOYEES
 WHERE (TO_CHAR(HIRE_DATE,'Q'),SALARY) IN (SELECT TO_CHAR(HIRE_DATE,'Q'),MAX(SALARY) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'Q'))

10 DISPLAY FIRST_NAME FOR THE EMPLOYEES WHO WORKS IN United States of America
   SELECT FIRST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID IN 
   (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID IN 
   (SELECT LOCATION_ID FROM LOCATIONS WHERE COUNTRY_ID IN 
   (SELECT COUNTRY_ID FROM COUNTRIES WHERE COUNTRY_NAME='United States of America')));

11 DISPLAY LAST_NAME FOR THE EMPLOYEES WHO WORKS IN Europe
   SELECT LAST_NAME FROM EMPLOYEES WHERE DEPARTMENT_ID IN
    (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID IN
     (SELECT LOCATION_ID FROM LOCATIONS WHERE COUNTRY_ID IN
      (SELECT COUNTRY_ID FROM COUNTRIES WHERE REGION_ID=(SELECT REGION_ID FROM REGIONS WHERE REGION_NAME='Europe'))));

12 DISPLAY FIRST_NAME , JOB_ID FOR THE EMPLOYEES WHO WORKS AS Programmer
   SELECT FIRST_NAME ,JOB_ID FROM EMPLOYEES WHERE JOB_ID='IT_PROG';

13 DISPLAY DEPARTMENT_NAME WHICH IS LOCATED IN Canada
   SELECT DEPARTMENT_NAME FROM DEPARTMENTS WHERE LOCATION_ID=
   (SELECT LOCATION_ID FROM LOCATIONS WHERE COUNTRY_ID IN 
   (SELECT COUNTRY_ID FROM COUNTRIES WHERE COUNTRY_NAME='Canada'));

14 DISPLAY CITY WHICH IS LOCATED IN Europe
   SELECT CITY FROM LOCATIONS WHERE COUNTRY_ID IN 
   (SELECT COUNTRY_ID FROM COUNTRIES WHERE COUNTRY_NAME='Canada');

15 DISPLAY THOSE WHO REPORTS TO ANY MANAGER (19 ROWS)
   SELECT FIRST_NAME, MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IN
    (SELECT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IS NOT NULL);

16 DISPLAY THOSE WHO REPORTS TO ANY DEPARTMENT HEAD (16 ROWS)
   SELECT FIRST_NAME FROM EMPLOYEES WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS);

17 DISPLAY THOSE WHO REPORTS TO HIS DEPARTMENT'S HEAD (12 ROWS)
   SELECT FIRST_NAME FROM EMPLOYEES WHERE (DEPARTMENT_ID,MANAGER_ID) IN 
   (SELECT DEPARTMENT_ID,MANAGER_ID FROM DEPARTMENTS);

18 DISPLAY THOSE WHO REPORTS TO Kevin.
   SELECT FIRST_NAME,MANAGER_ID FROM EMPLOYEES WHERE first_name =
   (SELECT first_name FROM EMPLOYEES WHERE FIRST_NAME ='Kevin');

19 DISPLAY THOSE WHO REPORTS TO MANAGER OF Michael.
   SELECT FIRST_NAME,MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID  IN
   (SELECT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IN(SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME ='Michael'));

20 DISPLAY ALL EXCEPT THOSE WHO REPORTS TO Neena.
   SELECT FIRST_NAME,MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID <>
   (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME='Neena');

21 DISPLAY ALL EXCEPT THOSE WHO REPORTS TO MANAGER OF Peter.
   SELECT FIRST_NAME,MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID <> 
   ALL(SELECT MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID =ALL(SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME='Peter'));

22 DISPLAY THOSE WHO REPORTS TO Steven OR Eleni.
   SELECT FIRST_NAME,MANAGER_ID FROM EMPLOYEES WHERE MANAGER_ID IN
    (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME='Steven') OR MANAGER_ID IN (SELECT MANAGER_ID FROM EMPLOYEES WHERE FIRST_NAME='Eleni');

23 DISPLAY THOSE EMPLOYEES WHO GETS SALARY IN THE RANGE BETWEEN Shelley and Jennifer.
   SELECT FIRST_NAME FROM EMPLOYEES WHERE SALARY < (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Shelley')
    AND SALARY> (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Jennifer');

24 DISPLAY THOSE WHO WERE JOINED BETWEEN Kimerely and Shelley. (INCLUDING BOTH)
   SELECT FIRST_NAME,HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE >= 
   (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME='Shelley') AND
    HIRE_DATE<= (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME='Kimerely');

25 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN THE SALARY RANGE OF Shelley and Kimerely. (LEAST, GREATEST)
   SELECT FIRST_NAME,SALARY FROM EMPLOYEES WHERE SALARY < (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Shelley') AND SALARY> (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME='Kimerely');

26 DISPLAY ALL WHO GETS SALARY IN GRADE_LEVEL D.
   SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='D') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='D');

27 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Manager.  
   SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE SALARY BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_ID='SA_MAN') AND (SELECT MAX_SALARY FROM JOBS WHERE JOB_ID='SA_MAN');

28 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY IN GRADE_LEVEL C AND E.
   SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE SALARY NOT BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='C') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='C') AND SALARY NOT BETWEEN (SELECT LOWEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='E') AND (SELECT HIGHEST_SAL FROM JOB_GRADES WHERE GRADE_LEVEL='E');

29 DISPLAY ALL OTHER THAN THOSE WHO GETS SALARY OUTSIDE RANGE OF Programmer.
   SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE SALARY BETWEEN 
   (SELECT MIN_SALARY FROM JOBS WHERE JOB_ID='IT_PROG') AND (SELECT MAX_SALARY FROM JOBS WHERE JOB_ID='IT_PROG');

30 DISPLAY ALL WHO GETS SALARY IN THE RANGE OF Sales Representative BUT NOT IN THE RANGE OF Accounting Manager.
   SELECT FIRST_NAME , SALARY FROM EMPLOYEES 
   WHERE SALARY BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_ID='SA_REP') AND 
   (SELECT MAX_SALARY FROM JOBS WHERE JOB_ID='SA_REP') AND
    SALARY NOT BETWEEN (SELECT MIN_SALARY FROM JOBS WHERE JOB_ID='AC_MGR') AND
     (SELECT MAX_SALARY FROM JOBS WHERE JOB_ID='AC_MGR');
