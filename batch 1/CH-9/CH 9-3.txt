SQL> REM CONCEPTS :
SQL>
SQL> REM CONCEPTS : 1 READ CONSISTENCY 2 CONCURRENCY 3 LOCKING 4 DEAD LOCK SITUATION
SQL>
SQL> DROP TABLE R1;

Table dropped.

SQL> CREATE TABLE R1 AS SELECT * FROM REGIONS;

Table created.

SQL> SELECT * FROM R1;

 REGION_ID REGION_NAME
---------- -------------------------
         1 Europe
         2 Americas
         3 Asia
         4 Middle East and Africa

SQL> INSERT INTO R1 VALUES (5,'Antarctica');

1 row created.

SQL> SELECT * FROM R1;

 REGION_ID REGION_NAME
---------- -------------------------
         1 Europe
         2 Americas
         3 Asia
         4 Middle East and Africa
         5 Antarctica

SQL> commit;

Commit complete.

SQL> REM READ CONSISTANCY : ANY DML CHANGES DONE IN ONE SESSION IS NOT ACCESSIBLE TO OTHER SESSION BEFORE COMMIT.
SQL>
SQL> UPDATE R1 SET REGION_NAME = UPPER(REGION_NAME);

5 rows updated.

SQL> ROLL
Rollback complete.
SQL> UPDATE R1 SET REGION_NAME = UPPER(REGION_NAME) WHERE REGION_ID = 1;

1 row updated.

SQL> SELECT * FROM R1;

 REGION_ID REGION_NAME
---------- -------------------------
         1 EUROPE
         2 Americas
         3 Asia
         4 Middle East and Africa
         5 Antarctica

SQL> SELECT * FROM R1;

 REGION_ID REGION_NAME
---------- -------------------------
         1 EUROPE
         2 Americas
         3 Asia
         4 Middle East and Africa
         5 Antarctica

SQL> REM CONCURRENCY : MULTIPLE SESSIONS CAN PERFORM DML OPERATIONS ON SAME TABLE AT THE SAME TIME BUT ON DIFFERENT SET OF ROWS.
SQL>
SQL> COMMIT;

Commit complete.

SQL> SELECT * FROM R1;

 REGION_ID REGION_NAME
---------- -------------------------
         1 EUROPE
         2 Americas
         3 Asia
         4 Middle East and Africa
         5 Antarctica

SQL> REM LOCK : ANY ROW IS LOCKED WHEN WE PERFORM DML OPERATION ON IT.
SQL>
SQL> REM UNLOCK : ANY ROW IS UNLOCKED WHEN THE TRANSACTION IS COMPLETED. (COMMIT/ROLLBACK)
SQL>
SQL> UPDATE R1 SET REGION_NAME = UPPER(REGION_NAME) WHERE REGION_ID = 3;

1 row updated.

SQL> UPDATE R1 SET REGION_NAME = UPPER(REGION_NAME) WHERE REGION_ID = 2;
UPDATE R1 SET REGION_NAME = UPPER(REGION_NAME) WHERE REGION_ID = 2
                                  *
ERROR at line 1:
ORA-00060: deadlock detected while waiting for resource


SQL> COMMIT;

Commit complete.

SQL> UPDATE R1 SET REGION_NAME = UPPER(REGION_NAME) WHERE REGION_ID = 2;

1 row updated.

SQL> COMMIT;

Commit complete.

SQL> REM 1 READ CONSISTANCY
SQL>
SQL> REM 2 CONCURRENCY
SQL>
SQL> REM 3 LOCKING/UNLOCKING
SQL>
SQL> REM 4 DEAD LOCK SITUATION
SQL>
SQL>
